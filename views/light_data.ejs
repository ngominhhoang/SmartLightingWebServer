<!DOCTYPE html>
<!--
Template Name: Metronic - Responsive Admin Dashboard Template build with Twitter Bootstrap 3.3.7
Version: 4.7.5
Author: KeenThemes
Website: http://www.keenthemes.com/
Contact: support@keenthemes.com
Follow: www.twitter.com/keenthemes
Dribbble: www.dribbble.com/keenthemes
Like: www.facebook.com/keenthemes
Purchase: http://themeforest.net/item/metronic-responsive-admin-dashboard-template/4021469?ref=keenthemes
Renew Support: http://themeforest.net/item/metronic-responsive-admin-dashboard-template/4021469?ref=keenthemes
License: You must have a valid license purchased only from themeforest(the above link) in order to legally use the theme for your project.
-->
<!--[if IE 8]> <html lang="en" class="ie8 no-js"> <![endif]-->
<!--[if IE 9]> <html lang="en" class="ie9 no-js"> <![endif]-->
<!--[if !IE]><!-->
<html lang="en">
<!--<![endif]-->
<!-- BEGIN HEAD -->

<head>
    <% include partials/header.ejs %>
</head>
<!-- END HEAD -->

<body class="page-header-fixed page-sidebar-closed-hide-logo page-container-bg-solid">
<% include partials/head.ejs %>
<!-- BEGIN CONTAINER -->
<div class="page-container">
    <% include partials/menu.ejs %>
    <!-- BEGIN CONTENT -->
    <div class="page-content-wrapper">
        <!-- BEGIN CONTENT BODY -->
        <div class="page-content">
            <!-- BEGIN SAMPLE FORM PORTLET-->
            <div class="portlet light bordered borderedBoxes">
                <div class="portlet-title">
                    <div class="caption font-green">
                        <i class="icon-pin font-green"></i>
                        <span class="caption-subject bold uppercase"> Lựa chọn thiết bị </span>
                    </div>
                </div>
                <div class="portlet-body form">
                    <form role="form" action="#" method="post">
                        <div class="form-body">
                            <% if(error !== null){ %>
                                <div class="alert alert-danger">
                                    <button class="close" data-close="alert"></button>
                                    <span> <%= error %> </span>
                                </div>
                            <%}else{%>
                                <div class="alert alert-info display-hide">
                                </div>
                            <%}%>
                            <div class="form-group form-md-line-input form-md-floating-label has-info" id="gethome">
                                <select class="form-control edited" id="chooseHome" name="chooseHome"></select>
                                <label for="form_control_1">Chọn nhà</label>
                            </div>
                            <div class="form-group form-md-line-input form-md-floating-label has-info" id="getroom">
                                <select class="form-control edited" id="chooseRoom" name="chooseRoom"></select>
                                <label for="form_control_1">Chọn phòng</label>
                            </div>
                            <div class="form-group form-md-line-input form-md-floating-label has-info" id="getdevicetype">
                                <select class="form-control edited" id="chooseType" name="chooseType">
                                    <option>Select</option>
                                    <option value="device_lighting">Đèn</option>
                                    <option value="device_illuminance_sensor">Sensor</option>
                                </select>
                               <label for="form_control_1">Chọn loại thiết bị</label>
                            </div>
                            <div class="form-group form-md-line-input form-md-floating-label has-info" id="getdevice">
                                <select class="form-control edited" id="chooseDevice" name="chooseDevice"></select>
                                <label for="form_control_1">Chọn thiết bị</label>
                            </div>
                            <div class="form-group form-md-line-input form-md-floating-label has-info" id="getType">
                                <select class="form-control edited" id="chooseQueryType" name="chooseQueryType">
                                    <option>Select</option>
                                    <option value="db">Database</option>
                                    <option value="broker">Broker MQTT</option>
                                </select>
                                <label for="form_control_1">Chọn nguồn</label>
                            </div>
                            <div class="row" id="getTime">
                                <div class="col-md-6">
                                    <div class="form-group form-md-line-input form-md-floating-label has-info">
                                        <input class="form-control form-control-inline" type="datetime-local" name="start_time" id="start_time"/>
                                        <label for="form_control_1">Chọn ngày bắt đầu</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group form-md-line-input form-md-floating-label has-info">
                                        <input class="form-control form-control-inline" type="datetime-local" name="end_time" id="end_time"/>
                                        <label for="form_control_1">Chọn ngày kết thúc</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- END CONTENT BODY -->
            <div class="row" id="chartdb">
                <div class="col-md-12">
                    <!-- BEGIN CHART PORTLET-->
                    <div class="portlet light ">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="icon-bar-chart font-green-haze"></i>
                                <span class="caption-subject bold uppercase font-green-haze"> Dữ liệu từ Database</span>
                                <span class="caption-helper">Từ ngày abc đến ngày xyz</span>
                            </div>
                        </div>
                        <div class="portlet-body">
                            <div id="chartdiv" class="chart" style="height: 400px;"> </div>
                        </div>
                    </div>
                    <!-- END CHART PORTLET-->
                </div>
            </div>
            <div class="row" id="chartbroker">
                <div class="col-md-12">
                    <!-- BEGIN CHART PORTLET-->
                    <div class="portlet light ">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="icon-bar-chart font-green-haze"></i>
                                <span class="caption-subject bold uppercase font-green-haze"> Dữ liệu theo thời gian thực</span>
                            </div>
                        </div>
                        <div class="portlet-body">
                            <div id="chartdiv2" class="chart" style="height: 400px;"> </div>
                        </div>
                    </div>
                    <!-- END CHART PORTLET-->
                </div>
            </div>
        </div>
        <!-- END CONTENT -->
    </div>
    <!-- END CONTAINER -->
    <% include partials/footer.ejs %>
</body>
<script>
    $(document).ready(() => {
        $('#loading').hide();
        $(document).ajaxStart(() => {
            $('#loading').show();
        }).ajaxStop(() => {
            $('#loading').hide();
        })
        let serverURL = "<%= process.env.SERVER_ADD%>" + "/api/data";

        let getHome = token => {
            let url = serverURL + "?token=" + token;
            $.getJSON(url, res => {
                $('#chooseHome').empty();
                $('#chooseHome').append($('<option>').text("Select"));
                $.each(res.data, (i, obj) => {
                    $('#chooseHome').append($('<option>').text(obj.home_id).attr('value', obj.home_id));
                });
            });
        }
        let getRoom = (home_id, token) => {
            let url = serverURL + "/home/" + home_id + "?token=" + token;
            $.getJSON(url, res => {
                $('#chooseRoom').empty();
                $('#chooseRoom').append($('<option>').text("Select"));
                $.each(res.data, (i, obj) => {
                    $('#chooseRoom').append($('<option>').text(obj.room_name).attr('value', obj.room_id));
                });
            });
        }
        let getDeviceList = (home_id, room_id, device_type, token) => {
            let url = serverURL + "/home/" + home_id + "/room/" + room_id + "/device_type/" + device_type + "?token=" + token;
            $.getJSON(url, res => {
                $('#chooseDevice').empty();
                $('#chooseDevice').append($('<option>').text("Select"));
                $.each(res.data, (i, obj) => {
                    $('#chooseDevice').append($('<option>').text(obj.mac_address).attr('value', obj.device_id).attr('name', 'device_lighting'));
                });
            });
        }

        let token = "<%=key%>";
        let home_id, room_id, device_id, device_type, room_name, data_type;

        $('#getroom').hide();
        $('#getdevicetype').hide();
        $('#getdevice').hide();
        $('#deviceinfo').hide();
        $('#getType').hide();
        $('#chartdb').hide();
        $('#chartbroker').hide();
        $('#getTime').hide();
        // $('#getparam').hide();

        getHome(token);

        $('#chooseHome').on('change', () => {
            home_id = ($('#chooseHome option:selected').val());
            $('#getroom').show();
            getRoom(home_id, token);
        });

        $('#chooseRoom').on('change', () => {
            room_id = $('#chooseRoom option:selected').val();
            room_name = $('#chooseRoom option:selected').text();
            $('#getdevicetype').show();
        });

        $('#chooseType').on('change', () => {
            device_type = $('#chooseType option:selected').val();
            getDeviceList(home_id, room_id, device_type, token);
            $('#getdevice').show();
        })

        $('#chooseDevice').on('change', () => {
            device_id = $('#chooseDevice option:selected').text();
            $('#getType').show();
        });

        $('#chooseQueryType').on('change', () => {
            data_type = $('#chooseQueryType option:selected').val();
            if(data_type == 'db'){
                $('#getTime').show();

                $('#end_time').on('keypress', (e) => {
                    var keycode = (e.keyCode ? e.keyCode : e.which);

                    if(keycode === 13){
                        let start_duration = $('#start_time').val();
                        let end_duration = $('#end_time').val();
                        // Themes begin
                        am4core.useTheme(am4themes_animated);
                        // Themes end

                        var chart = am4core.create("chartdiv", am4charts.XYChart);

                        var chartData = [];

                        console.log(home_id + room_id + " " +device_type+ " " + device_id + start_duration + end_duration);

                        let tmp;

                        if(device_type === 'device_lighting'){
                            device_type = 'light'
                            let url = serverURL + "/home/" + home_id + "/room/" + room_id + "/device_type/" + device_type + "/device_id/" + device_id + "/type/db?token=" + token + "&start_duration=" + start_duration + "&end_duration=" + end_duration;
                            console.log(url);
                            $.getJSON(url , res => {
                                res.data2.forEach((data, i) => {
                                    tmp = data;
                                    let t = parseInt(tmp.illuminance_level);
                                    let d = new Date(tmp.coming_time);
                                    chartData.push({
                                        date: d,
                                        value: t
                                    });
                                });
                                chart.data = chartData;
                            });
                        }
                        else if(device_type === 'device_illuminance_sensor'){
                            device_type = 'sensor'
                            let url = serverURL + "/home/" + home_id + "/room/" + room_id + "/device_type/" + device_type + "/device_id/" + device_id + "/type/db?token=" + token + "&start_duration=" + start_duration + "&end_duration=" + end_duration;
                            console.log(url);
                            $.getJSON(url , res => {
                                res.data2.forEach((data, i) => {
                                    tmp = data;
                                    let t = parseInt(tmp.illuminance_value);
                                    let d = new Date(tmp.coming_time);
                                    chartData.push({
                                        date: d,
                                        value: t
                                    });
                                });
                                chart.data = chartData;
                            });
                        }

                        // Create axes
                        var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
                        dateAxis.renderer.minGridDistance = 60;

                        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());

                        // Create series
                        var series = chart.series.push(new am4charts.LineSeries());
                        series.dataFields.valueY = "value";
                        series.dataFields.dateX = "date";
                        series.tooltipText = "{value}"

                        series.tooltip.pointerOrientation = "vertical";

                        chart.cursor = new am4charts.XYCursor();
                        chart.cursor.snapToSeries = series;
                        chart.cursor.xAxis = dateAxis;

                        //chart.scrollbarY = new am4core.Scrollbar();
                        chart.scrollbarX = new am4core.Scrollbar();
                        $('.caption-helper').text('Từ thời điểm ' + start_duration + ' đến thời điểm ' + end_duration);
                        $('#chartbroker').hide();
                        $('#chartdb').show();
                    }
                })
            }
            else if(data_type == 'broker'){
                /**
                 * ---------------------------------------
                 * This demo was created using amCharts 4.
                 *
                 * For more information visit:
                 * https://www.amcharts.com/
                 *
                 * Documentation is available at:
                 * https://www.amcharts.com/docs/v4/
                 * ---------------------------------------
                 */

                // Themes begin
                am4core.useTheme(am4themes_animated);
                // Themes end

                var chart = am4core.create("chartdiv2", am4charts.XYChart);
                chart.hiddenState.properties.opacity = 0;

                chart.padding(0, 0, 0, 0);

                chart.zoomOutButton.disabled = true;

                var data = [];
                var visits = 10;
                var i = 0;

                for (i = 0; i <= 30; i++) {
                    visits -= Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);
                    data.push({ date: new Date().setSeconds(i - 30), value: visits });
                }

                chart.data = data;

                var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
                dateAxis.renderer.grid.template.location = 0;
                dateAxis.renderer.minGridDistance = 30;
                dateAxis.dateFormats.setKey("second", "ss");
                dateAxis.periodChangeDateFormats.setKey("second", "[bold]h:mm a");
                dateAxis.periodChangeDateFormats.setKey("minute", "[bold]h:mm a");
                dateAxis.periodChangeDateFormats.setKey("hour", "[bold]h:mm a");
                dateAxis.renderer.inside = true;
                dateAxis.renderer.axisFills.template.disabled = true;
                dateAxis.renderer.ticks.template.disabled = true;

                var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
                valueAxis.tooltip.disabled = true;
                valueAxis.interpolationDuration = 500;
                valueAxis.rangeChangeDuration = 500;
                valueAxis.renderer.inside = true;
                valueAxis.renderer.minLabelPosition = 0.05;
                valueAxis.renderer.maxLabelPosition = 0.95;
                valueAxis.renderer.axisFills.template.disabled = true;
                valueAxis.renderer.ticks.template.disabled = true;

                var series = chart.series.push(new am4charts.LineSeries());
                series.dataFields.dateX = "date";
                series.dataFields.valueY = "value";
                series.interpolationDuration = 500;
                series.defaultState.transitionDuration = 0;
                series.tensionX = 0.8;

                chart.events.on("datavalidated", function () {
                    dateAxis.zoom({ start: 1 / 15, end: 1.2 }, false, true);
                });

                dateAxis.interpolationDuration = 500;
                dateAxis.rangeChangeDuration = 500;

                document.addEventListener("visibilitychange", function() {
                    if (document.hidden) {
                        if (interval) {
                            clearInterval(interval);
                        }
                    }
                    else {
                        startInterval();
                    }
                }, false);

                // add data
                var interval;
                function startInterval() {
                    interval = setInterval(function() {
                        visits =
                            visits + Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);
                        var lastdataItem = series.dataItems.getIndex(series.dataItems.length - 1);
                        chart.addData(
                            { date: new Date(lastdataItem.dateX.getTime() + 1000), value: visits },
                            1
                        );
                    }, 1000);
                }

                startInterval();

                // all the below is optional, makes some fancy effects
                // gradient fill of the series
                series.fillOpacity = 1;
                var gradient = new am4core.LinearGradient();
                gradient.addColor(chart.colors.getIndex(0), 0.2);
                gradient.addColor(chart.colors.getIndex(0), 0);
                series.fill = gradient;

                // this makes date axis labels to fade out
                dateAxis.renderer.labels.template.adapter.add("fillOpacity", function (fillOpacity, target) {
                    var dataItem = target.dataItem;
                    return dataItem.position;
                })

                // need to set this, otherwise fillOpacity is not changed and not set
                dateAxis.events.on("validated", function () {
                    am4core.iter.each(dateAxis.renderer.labels.iterator(), function (label) {
                        label.fillOpacity = label.fillOpacity;
                    })
                })

                // this makes date axis labels which are at equal minutes to be rotated
                dateAxis.renderer.labels.template.adapter.add("rotation", function (rotation, target) {
                    var dataItem = target.dataItem;
                    if (dataItem.date && dataItem.date.getTime() == am4core.time.round(new Date(dataItem.date.getTime()), "minute").getTime()) {
                        target.verticalCenter = "middle";
                        target.horizontalCenter = "left";
                        return -90;
                    }
                    else {
                        target.verticalCenter = "bottom";
                        target.horizontalCenter = "middle";
                        return 0;
                    }
                })

                // bullet at the front of the line
                var bullet = series.createChild(am4charts.CircleBullet);
                bullet.circle.radius = 5;
                bullet.fillOpacity = 1;
                bullet.fill = chart.colors.getIndex(0);
                bullet.isMeasured = false;

                series.events.on("validated", function() {
                    bullet.moveTo(series.dataItems.last.point);
                    bullet.validatePosition();
                });
                $('#getTime').hide();
                $('#chartdb').hide();
                $('#chartbroker').show();
            }
        });
    });
</script>

</html>